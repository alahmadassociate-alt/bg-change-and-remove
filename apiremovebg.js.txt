// api/removebg.js
import fetch from 'node-fetch';
import FormData from 'form-data';

// This handler expects JSON: { image: "data:image/png;base64,...." }
// It forwards the image to remove.bg using server-side API key (stored in REMOVE_BG_KEY env var).

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    res.status(405).send('Method Not Allowed');
    return;
  }

  const key = process.env.REMOVE_BG_KEY;
  if (!key) {
    res.status(500).send('Server missing API key');
    return;
  }

  try {
    const body = await new Promise((resolve, reject) => {
      let data = '';
      req.on('data', chunk => data += chunk);
      req.on('end', () => resolve(data));
      req.on('error', reject);
    });
    // body is a JSON string
    const json = JSON.parse(body);
    const dataUrl = json.image; // expect "data:image/png;base64,...."

    const match = dataUrl.match(/^data:(image\/\w+);base64,(.+)$/);
    if (!match) return res.status(400).send('Invalid image data');

    const mime = match[1];
    const b64 = match[2];
    const buffer = Buffer.from(b64, 'base64');

    const form = new FormData();
    form.append('image_file', buffer, { filename: 'upload.png', contentType: mime });

    const resp = await fetch('https://api.remove.bg/v1.0/removebg', {
      method: 'POST',
      headers: {
        'X-Api-Key': key,
        ...form.getHeaders()
      },
      body: form
    });

    if (!resp.ok) {
      const txt = await resp.text().catch(()=> '');
      res.status(resp.status).send(txt || 'remove.bg error');
      return;
    }

    const arr = await resp.arrayBuffer();
    const out = Buffer.from(arr);
    res.setHeader('Content-Type', resp.headers.get('content-type') || 'image/png');
    res.status(200).send(out);
  } catch (err) {
    console.error(err);
    res.status(500).send('Server error');
  }
}
